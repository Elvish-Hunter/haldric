[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "Blur"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=4]

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 0.5

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 1

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
uniform float Blur;



void vertex() {
// Output:0

}

void fragment() {
// Input:8
	vec3 n_out8p0;
	n_out8p0 = vec3(SCREEN_UV,0.0);

// ScalarUniform:2
	float n_out2p0;
	n_out2p0 = Blur;

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 _tex_read = textureLod( SCREEN_TEXTURE , n_out8p0.xy , n_out2p0 );
		n_out7p0 = _tex_read.rgb;
		n_out7p1 = _tex_read.a;
	}

// Input:9
	vec3 n_out9p0;
	n_out9p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out9p0.xy );
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Scalar:6
	float n_out6p0;
	n_out6p0 = 0.500000;

// VectorMix:5
	vec3 n_out5p0;
	n_out5p0 = mix( n_out7p0 , n_out3p0 , vec3(n_out6p0) );

// ScalarOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0;
	n_out4p0 = n_out3p1 * n_in4p1;

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -572.062, -200 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 740, 520 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -440, 380 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -60, 500 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 380, 620 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 380, 400 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -80, 760 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -60, 240 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -480, 200 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -400, 560 )
nodes/fragment/connections = PoolIntArray( 3, 1, 4, 0, 4, 0, 0, 1, 6, 0, 5, 2, 3, 0, 5, 1, 2, 0, 7, 1, 5, 0, 0, 0, 8, 0, 7, 0, 7, 0, 5, 0, 9, 0, 3, 0 )
